Вынести настройки в один файл(константы+config_data)✅
Добавить дату отсчета✅
Решить проблему с dtUpdate✅
______
Добавить к директории с файлами дату, чтоб не заменялись✅
объединить ukio в ukios и записывать новые карточки в ukio✅
добавить 50/50: структуру phonecall или phonecall_id в ukio(не хранить и структуру и id: что-то одно)✅
если структура в calls, добавлять id phonecall-a и не создавать структуру в ukio✅
если структура phonecall находится в ukio, создавать call в calls c phonecallId✅
______
если вызов сброшен, добавить логику попытки перезвона(максимум 3)✅
если вызов сброшен aCallEnded=True✅
не добавлять все в calls, в одном calls может быть один call(первый) с базовой информацией✅
т.е. без redirect call.✅
_______
добавить wrong, childplay,✅
______
dtCreate = dtConnect✅
______
dtCreate в карточках(card01, card02, ...) = dtRedirectConfirm✅
❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌
добавить prefix to ukio and call like prefix_uuid()✅

очистить файл конфига✅
добавить возможность получения файлов как раньше и как сейчас и добавить настройку для этого✅


добавить call без phonecall с настройой вероятности✅
есть dtCall есть call но нет PhoneCall, ukio не создавать✅

сделать readme✅

phonecall всегда хранится в ukio целый и в call не целы✅

добавить случайный интервал в секундах между вызовам✅

на место eosclasstypeid указывать число в соотвествии c id в ПИТ✅

in calls только первы✅
не хранить phobecallid в uki✅
убрать dtEndCall из Call, и убрать все связанное с концом✅
❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌
1) Решить с phoneCall от redirect call
consult normalize✅

для всех временных параметров сделать настройку:
- тип распределения (равномерное, нормальное, пуассоновское)✅
- для нормального - среднее и ср.кв. откл
- для равномерного - левые и правый край
- для пуассоновского - спросить у Глеба

2 этап:
- учет полной WSDL 4.3✅
- данные для формы 2/112✅
- данные для формы 3/112✅

спросить у андрея про координаты✅
- типы происшествий (справочник взять у Глеба) создать гул таблицу по аналогии которую мен прислали, добавить 6 столбцов для каждой службы✅
сделать гугл табличку для адресов✅
заполнить самому 10 адресов✅
добавить все константы в constants
добавить обработчики таблиц в google sheets✅

- адреса (справочник около 1000 адресов Хабарского края, желательно с координатами, спросить у Андрея, если есть ОКАТО или ОКТМО, то добавить)
- отправлятор по расписанию (выбрать оптимальное решение)

dtSend - будет являться временем для отправки на сервер✅

вместе с генерацией ukio и calls, делать файлы с (dtSend, название файла)✅
ukio_for_send хранится dtSend и название xml файла✅
call_for_send✅

сделать в конифге два списка для названий и дат✅
для сalls и для ukio✅

продумать логику разбивания ukio, те укио генерируется постепенно с каждым полем, продумать самому
перенести поля с call в ukio помеченные #✅
ждать missed calls схему

и не генерить call в calls, перенести его поля в ukio ✅
и скинуть такой архив в чат
__
Создать генератор-изменятор констант на основе файла с регионами
добавить настройку коэфициента для количества звонков, на основе числа жителей
У меня будет файл с названием региона и его населением, мне нужно добавить настройку коэффициента который отвечает за количество вызовов
Также нужно будет настроить адреса, чтоб каждому региону подтягивалась его таблица с адресами
-//- incident types
после учета этих коэффциентов будут меняться значения в файле constants, и запускаться генерация
из этих данных соответственно будут генерироваться папки с файлами ukio, и файлы с датами отправки
нужно добавить асинхронную отправку файлов после их генерации
---
добавить чтение из csv файла, вынести адреса и incidenttype ✅
ссылка есть в коде!
сделать operator, operatorwork, arm, armwork: работают все ✅
настройки:
число армов✅
кол во операторов выбирается рандомно между двумя мин макс значениями✅
рандомно присваиваю номера оператором, от 0 до 3, эти номера значат номер их смены в соответствии со сменами  ✅
длина смены✅
задаем колво оперторов в смене✅
сделать что то типо рассадки: рандомно рассаживаю операторов к арму✅
операторы начинают работать во время генерации: операторы выбираются рандомно из доступных✅
все опепаторы работают сменами по кругу ✅

проверять что операторов меньше или равно колву армов✅
армы расположены в цов и рцов
два числа, число в цов и рцов
все принимают все вызовы

*потом: генерить события недоступности цов или рцов

доступные это те, которые не работали в этот день✅

generate incident type another file using google sheets they haven't logic with ukio, just generation ✅
сделать настройку для файлов которые выдаются, отдельно ukio, отдельно missed, incident

разнести файл настройки для отправлятора и для генератора всего 3 файла

сделать добавление префиксов "soap" и тд к каждому файлу
и постфикс!
и сделать отдельно для каждого файла генерации(ukio, missed, armwork, arm)
если задан конкретный то он перебивает глобальный
и если не задан то берется глобальный

можно отложить:
сделать google sheet для регионов
login, password, token ✅

сделать тест на то что в сгенерированной ukio есть поля из wsdl

*сделать два режима отправлятора, один по дате, другой по задержке между отправкой

