#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¶–ü–ì XML —Ñ–∞–π–ª–æ–≤ –ø–æ cpg_wsdl_1.wsdl
"""
import xml.etree.ElementTree as ET
from pprint import pprint
import os
import sys

def get_types_from_cpg_wsdl(wsdl_path: str) -> dict:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–∏–ø—ã –∏ –∏—Ö –ø–æ–ª—è –∏–∑ –¶–ü–ì WSDL"""
    types = {}
    tree = ET.parse(wsdl_path)
    root = tree.getroot()
    
    # Namespace –¥–ª—è XSD
    ns = {'xs': 'http://www.w3.org/2001/XMLSchema'}
    
    # –ù–∞–π–¥–µ–º –≤—Å–µ complexType —ç–ª–µ–º–µ–Ω—Ç—ã –≤ WSDL
    for complex_type in root.findall(".//xs:complexType", ns):
        type_name = complex_type.get('name')
        if type_name:
            types[type_name] = set()
            
            # –ò–∑–≤–ª–µ—á–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–ø–æ–ª—è) –∏–∑ —ç—Ç–æ–≥–æ —Ç–∏–ø–∞
            for element in complex_type.findall(".//xs:element", ns):
                field_name = element.get('name')
                if field_name:
                    types[type_name].add(field_name)
    
    return types


def parse_cpg_xml(xml_path: str) -> dict:
    """–ü–∞—Ä—Å–∏—Ç –¶–ü–ì XML –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É"""
    tree = ET.parse(xml_path)
    root = tree.getroot()
    
    # Namespace –¥–ª—è –¶–ü–ì
    ns = {'tns': 'http://tspg.service/'}
    
    structure = {}
    
    # UpdateCardRequest
    structure['UpdateCardRequest'] = set()
    for child in root:
        # –£–±–∏—Ä–∞–µ–º namespace –∏–∑ –∏–º–µ–Ω–∏ —Ç–µ–≥–∞
        tag = child.tag.replace('{http://tspg.service/}', '')
        structure['UpdateCardRequest'].add(tag)
    
    # Card
    card = root.find('tns:Card', ns)
    if card:
        structure['Card'] = set()
        for child in card:
            tag = child.tag.replace('{http://tspg.service/}', '')
            structure['Card'].add(tag)
            
            # –î–ª—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä —Ç–æ–∂–µ —Å–æ–±–∏—Ä–∞–µ–º –ø–æ–ª—è
            if tag in ['Location', 'CommonData', 'DdsData01', 'DdsData02', 'DdsData03', 
                      'DdsData04', 'DdsDataAT', 'DdsDataCommServ', 'CreateOperator', 'LastChangeOperator']:
                structure[tag] = set()
                for nested_child in child:
                    nested_tag = nested_child.tag.replace('{http://tspg.service/}', '')
                    structure[tag].add(nested_tag)
    
    # Ier
    ier = root.find('tns:Ier', ns)
    if ier:
        structure['Ier'] = set()
        for child in ier:
            tag = child.tag.replace('{http://tspg.service/}', '')
            structure['Ier'].add(tag)
            
            # –î–ª—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä
            if tag in ['FullName', 'AcceptOperator', 'Location']:
                structure[f'Ier_{tag}'] = set()
                for nested_child in child:
                    nested_tag = nested_child.tag.replace('{http://tspg.service/}', '')
                    structure[f'Ier_{tag}'].add(nested_tag)
    
    return structure


def validate_cpg_file(xml_path: str, wsdl_path: str):
    """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¶–ü–ì XML —Ñ–∞–π–ª –ø—Ä–æ—Ç–∏–≤ WSDL —Å—Ö–µ–º—ã"""
    print(f"\n{'='*80}")
    print(f"–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞: {os.path.basename(xml_path)}")
    print(f"WSDL —Å—Ö–µ–º–∞: {os.path.basename(wsdl_path)}")
    print('='*80)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø—ã –∏–∑ WSDL
    wsdl_types = get_types_from_cpg_wsdl(wsdl_path)
    
    # –ü–∞—Ä—Å–∏–º XML
    xml_structure = parse_cpg_xml(xml_path)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:")
    
    required_in_card = {
        'Location', 'CommonData', 'CreateOperator', 
        'LastChangeOperator', 'IncidentState', 'Created', 'Changed'
    }
    
    if 'Card' in xml_structure:
        missing = required_in_card - xml_structure['Card']
        if missing:
            print(f"   ‚ùå –í Card –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing}")
        else:
            print(f"   ‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è Card –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    else:
        print(f"   ‚ùå Card –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ XML!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ DdsData (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ - —Å–ª—É–∂–±—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –ø–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏)
    dds_services = ['DdsData01', 'DdsData02', 'DdsData03', 'DdsData04', 'DdsDataAT', 'DdsDataCommServ']
    found_services = []
    
    for service in dds_services:
        if service in xml_structure.get('Card', set()):
            found_services.append(service)
    
    if found_services:
        print(f"\nüìã –°–ª—É–∂–±—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è: –Ω–∞–π–¥–µ–Ω–æ {len(found_services)} –∏–∑ 6")
        for service in found_services:
            print(f"   ‚úÖ {service}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Ier
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ Ier (–æ–±—Ä–∞—â–µ–Ω–∏–µ):")
    required_in_ier = {'IerIsoTime', 'CgPn', 'AcceptOperator', 'IerType'}
    
    if 'Ier' in xml_structure:
        missing = required_in_ier - xml_structure['Ier']
        if missing:
            print(f"   ‚ùå –í Ier –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing}")
        else:
            print(f"   ‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è Ier –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    else:
        print(f"   ‚ùå Ier –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ XML!")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print(f"\n{'='*80}")
    print("üìä –ò–¢–û–ì –í–ê–õ–ò–î–ê–¶–ò–ò:")
    
    is_valid = True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    if 'Card' in xml_structure and 'Ier' in xml_structure:
        print("   ‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (Card + Ier)")
    else:
        print("   ‚ùå –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        is_valid = False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if 'Card' in xml_structure:
        if not (required_in_card - xml_structure['Card']):
            print("   ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è Card –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            print("   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è Card")
            is_valid = False
    
    if 'Ier' in xml_structure:
        if not (required_in_ier - xml_structure['Ier']):
            print("   ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è Ier –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            print("   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è Ier")
            is_valid = False
    
    if is_valid:
        print("\nüéâ –§–ê–ô–õ –í–ê–õ–ò–î–ï–ù –ü–û –°–•–ï–ú–ï cpg_wsdl_1.wsdl")
    else:
        print("\n‚ùå –§–ê–ô–õ –ù–ï –ü–†–û–®–ï–õ –í–ê–õ–ò–î–ê–¶–ò–Æ")
    
    print('='*80)
    
    return is_valid


def test_all_cpg_files():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¶–ü–ì —Ñ–∞–π–ª—ã"""
    cpg_dir = "../files/TEST_cpg"
    wsdl_path = "../cpg_wsdl_1.wsdl"
    
    # –ù–∞–π–¥–µ–º –≤—Å–µ XML —Ñ–∞–π–ª—ã
    xml_files = []
    for root, dirs, files in os.walk(cpg_dir):
        for file in files:
            if file.endswith('.xml'):
                xml_files.append(os.path.join(root, file))
    
    print(f"\nüîç –ù–∞–π–¥–µ–Ω–æ {len(xml_files)} XML —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    valid_count = 0
    invalid_count = 0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤
    for xml_file in xml_files[:5]:  # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
        try:
            is_valid = validate_cpg_file(xml_file, wsdl_path)
            if is_valid:
                valid_count += 1
            else:
                invalid_count += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {xml_file}: {e}")
            invalid_count += 1
    
    print(f"\n\n{'='*80}")
    print("üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚úÖ –í–∞–ª–∏–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {valid_count}")
    print(f"   ‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {invalid_count}")
    print(f"   üìà –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏: {valid_count/(valid_count+invalid_count)*100:.1f}%")
    print('='*80)


if __name__ == "__main__":
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ —Å–ª—É–∂–±–∞–º–∏
    test_file = "../files/TEST_cpg/test_multi_services/UpdateCard/test_all_services.xml"
    wsdl_file = "../cpg_wsdl_1.wsdl"
    
    if os.path.exists(test_file):
        print("\nüß™ –¢–ï–°–¢ –§–ê–ô–õ–ê –°–û –í–°–ï–ú–ò –°–õ–£–ñ–ë–ê–ú–ò:")
        validate_cpg_file(test_file, wsdl_file)
    
    # –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\n\nüî¨ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–´–• –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–• –§–ê–ô–õ–û–í:")
    test_all_cpg_files()